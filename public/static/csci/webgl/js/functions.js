jQuery(document).ready(function() {
	$("input").css("border","none");
	$("input").css("width","50px");
	
	$(".button").button();

	// Activate translation sliders
	// X-slider
	$( "#sliderX" ).slider({value:0, min: -50, max: 50, step: 1,
		slide: function( event, ui ) {
			$("#controlX").val(ui.value);
		}
	});
	$("#controlX").val($("#sliderX" ).slider( "value" ) );
	
	// Y-slider
	$( "#sliderY" ).slider({value:0, min: -50, max: 50, step: 1,
		slide: function( event, ui ) {
			$("#controlY").val(ui.value);
		}
	});
	$("#controlY").val($("#sliderY" ).slider( "value" ) );
	
	// Z-slider
	$( "#sliderZ" ).slider({value:0, min: -50, max: 50, step: 1, 
		slide: function( event, ui ) {
			$("#controlZ").val(ui.value);
		}
	});
	$("#controlZ").val($("#sliderZ" ).slider( "value" ) );
	
	// Activate scale sliders
	// DX-slider
	$( "#sliderDX" ).slider({value:1, min: 1, max: 10, step: .1,
		slide: function( event, ui ) {
			$("#controlDX").val(ui.value);
		}
	});
	$("#controlDX").val($("#sliderDX" ).slider( "value" ) );
	
	// DY-slider
	$( "#sliderDY" ).slider({value:1, min: 1, max: 10, step: .1,
		slide: function( event, ui ) {
			$("#controlDY").val(ui.value);
		}
	});
	$("#controlDY").val($("#sliderDY" ).slider( "value" ) );
	
	// DZ-slider
	$( "#sliderDZ" ).slider({value:1, min: 1, max: 10, step: .1, 
		slide: function( event, ui ) {
			$("#controlDZ").val(ui.value);
		}
	});
	$("#controlDZ").val($("#sliderDZ" ).slider( "value" ) );
});

function resetControls() {
	$("#controlX").val("0");
	$("#sliderX").slider("value", "0");
	$("#controlY").val("0");
	$("#sliderY").slider("value", "0");
	$("#controlZ").val("0");
	$("#sliderZ").slider("value", "0");

	$("#controlDX").val("1");
	$("#sliderDX").slider("value", "1");
	$("#controlDY").val("1");
	$("#sliderDY").slider("value", "1");
	$("#controlDZ").val("1");
	$("#sliderDZ").slider("value", "1");
	
	webGLStart();
}

function getVerts(n) {
	var x = parseInt($("#controlX").val());
	var y = parseInt($("#controlY").val());
	var z = parseInt($("#controlZ").val());
	
	var dx = parseFloat($("#controlDX").val());
	var dy = parseFloat($("#controlDY").val());
	var dz = parseFloat($("#controlDZ").val());
	
	var xyz =
	[		
		// Head
		+5,+23,+3 , -5,+23,+3 , -5,+23,-4 , -5,+23,-4 , +5,+23,-4 , +5,+23,+3,
		+5,+23,+3 , +5,+13,+3 , +5,+13,-4 , +5,+13,-4 , +5,+23,-4 , +5,+23,+3,
		+5,+23,+3 , -5,+23,+3 , -5,+13,+3 , -5,+13,+3 , +5,+23,+3 , +5,+13,+3,
		-5,+13,+3 , -5,+13,-4 , -5,+23,-4 , -5,+23,-4 , -5,+23,+3 , -5,+13,+3,
		-5,+23,-4 , +5,+23,-4 , +5,+13,-4 , +5,+13,-4 , -5,+13,-4 , -5,+23,-4,
		
		// Body
		-10,+13,-7 , +10,+13,-7 , -10,+13,+6 , -10,+13,+6 , +10,+13,+6 , +10,+13,-7,
		+10,+13,-7 , +10,-12,-7 , +10,-12,+6 , +10,-12,+6 , +10,+13,-7 , +10,+13,+6,
		+10,+13,+6 , -10,+13,+6 , -10,-12,+6 , -10,-12,+6 , +10,-12,+6 , +10,+13,+6,
		-10,+13,+6 , -10,-12,+6 , -10,-12,-7 , -10,-12,-7 , -10,+13,-7 , -10,+13,+6,
		-10,+13,-7 , +10,+13,-7 , -10,-12,-7 , -10,-12,-7 , +10,-12,-7 , +10,+13,-7,
		-10,-12,-7 , -10,-12,+6 , +10,-12,+6 , +10,-12,+6 , +10,-12,-7 , -10,-12,-7,
		
		// Right Arm
		+10,+10,-2 , +10,+10,+1 , +13,+10,-2 , +13,+10,-2 , +13,+10,+1 , +10,+10,+1,
		+10,-20,+1 , +10,-20,-2 , +10,+10,+1 , +10,+10,+1 , +10,+10,-2 , +10,-20,-2,
		+10,-20,-2 , +13,-20,-2 , +13,+10,-2 , +13,+10,-2 , +10,+10,-2 , +10,-20,-2,
		+13,+10,-2 , +13,+10,+1 , +13,-20,-2 , +13,-20,-2 , +13,-20,+1 , +13,+10,+1,
		+13,+10,+1 , +10,+10,+1 , +10,-20,+1 , +10,-20,+1 , +13,-20,+1 , +13,+10,+1,
		+10,-20,-2 , +10,-20,+1 , +13,-20,+1 , +13,-20,+1 , +13,-20,-2 , +10,-20,-2,
		
		// Left Arm
		-10,+10,-2 , -10,+10,+1 , -13,+10,-2 , -13,+10,-2 , -13,+10,+1 , -10,+10,+1,
		-10,-20,+1 , -10,-20,-2 , -10,+10,+1 , -10,+10,+1 , -10,+10,-2 , -10,-20,-2,
		-10,-20,-2 , -13,-20,-2 , -13,+10,-2 , -13,+10,-2 , -10,+10,-2 , -10,-20,-2,
		-13,+10,-2 , -13,+10,+1 , -13,-20,-2 , -13,-20,-2 , -13,-20,+1 , -13,+10,+1,
		-13,+10,+1 , -10,+10,+1 , -10,-20,+1 , -10,-20,+1 , -13,-20,+1 , -13,+10,+1,
		-10,-20,-2 , -10,-20,+1 , -13,-20,+1 , -13,-20,+1 , -13,-20,-2 , -10,-20,-2,
		
		// Right Leg
		+6,-12,-2 , +6,-12,+2 , +6,-32,+2 , +6,-32,+2 , +6,-32,-2 , +6,-12,-2,
		+6,-12,-2 , +2,-12,-2 , +2,-32,-2 , +2,-32,-2 , +6,-32,-2 , +6,-12,-2,
		+2,-12,-2 , +2,-12,+2 , +2,-32,-2 , +2,-32,-2 , +2,-32,+2 , +2,-12,+2,
		+2,-12,+2 , +2,-32,+2 , +6,-32,+2 , +6,-32,+2 , +6,-12,+2 , +2,-12,+2,
		
		// Left Leg
		-6,-12,-2 , -6,-12,+2 , -6,-32,+2 , -6,-32,+2 , -6,-32,-2 , -6,-12,-2,
		-6,-12,-2 , -2,-12,-2 , -2,-32,-2 , -2,-32,-2 , -6,-32,-2 , -6,-12,-2,
		-2,-12,-2 , -2,-12,+2 , -2,-32,-2 , -2,-32,-2 , -2,-32,+2 , -2,-12,+2,
		-2,-12,+2 , -2,-32,+2 , -6,-32,+2 , -6,-32,+2 , -6,-12,+2 , -2,-12,+2,
		
		// Right Foot
		+1,-32,-3 , +7,-32,-3 , +7,-34,-3 , +7,-34,-3 , +1,-34,-3 , +1,-32,-3,
		+1,-34,-3 , +1,-34,+7 , +7,-34,+7 , +7,-34,+7 , +7,-34,-3 , +1,-34,-3,
		+1,-34,-3 , +1,-32,-3 , +1,-32,+7 , +1,-32,+7 , +1,-34,+7 , +1,-34,-3,
		+1,-34,+7 , +1,-32,+7 , +7,-32,+7 , +7,-32,+7 , +7,-34,+7 , +1,-34,+7,
		+1,-32,+7 , +7,-32,+7 , +7,-32,-3 , +7,-32,-3 , +1,-32,-3 , +1,-32,+7,
		+7,-32,+7 , +7,-34,+7 , +7,-34,-3 , +7,-34,-3 , +7,-32,-3 , +7,-32,+7,
		
		// Left Foot
		-1,-32,-3 , -7,-32,-3 , -7,-34,-3 , -7,-34,-3 , -1,-34,-3 , -1,-32,-3,
		-1,-34,-3 , -1,-34,+7 , -7,-34,+7 , -7,-34,+7 , -7,-34,-3 , -1,-34,-3,
		-1,-34,-3 , -1,-32,-3 , -1,-32,+7 , -1,-32,+7 , -1,-34,+7 , -1,-34,-3,
		-1,-34,+7 , -1,-32,+7 , -7,-32,+7 , -7,-32,+7 , -7,-34,+7 , -1,-34,+7,
		-1,-32,+7 , -7,-32,+7 , -7,-32,-3 , -7,-32,-3 , -1,-32,-3 , -1,-32,+7,
		-7,-32,+7 , -7,-34,+7 , -7,-34,-3 , -7,-34,-3 , -7,-32,-3 , -7,-32,+7
	];
	
	var i;
	for (i = 0; i <= (n * 3); i += 3) {
		var x0 = i;
		var y0 = i+1;
		var z0 = i+2;
		
		xyz[x0] = x + (xyz[x0] * dx);
		xyz[y0] = y + (xyz[y0] * dy);
		xyz[z0] = z + (xyz[z0] * dz);
	}
		
	return xyz;
}